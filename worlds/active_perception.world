<?xml version="1.0"?>
<sdf version="1.4">
	<world name="default">
		<model name='box_green'>
			<static>1</static>
			<pose frame=''>0 0 0 0 0 0</pose>
			<link name='link'>
				<visual name='visual'>
					<geometry>
						<box>
							<size>0.1 0.2 0.3</size>
						</box>
					</geometry>
					<material>
						<script>
							<name>Gazebo/GreenGlow</name>
							<uri>file://media/materials/scripts/gazebo.material</uri>
						</script>
					</material>
				</visual>
			</link>
		</model>

		<population name="sensors_population">
			<model name="kinect1">
				<static>1</static>
				<pose>0 0 0.036 0 0 0</pose>
				<link name="link">
					<inertial>
						<mass>0.2</mass>
					</inertial>
					<collision name="collision">
						<geometry>
							<box>
								<size>0.073000 0.276000 0.072000</size>
							</box>
						</geometry>
					</collision>
					<visual name="visual">
						<transparency>0</transparency>
						<geometry>
							<mesh>
								<uri>model://kinect1/meshes/kinect.dae</uri>
							</mesh>
						</geometry>
					</visual>
					<sensor name="active_perception_kinect1_sensor" type="depth">
						<update_rate>1</update_rate>
						<camera>
							<!-- <depth_camera> <output>points</output> </depth_camera> -->
							<horizontal_fov>1.047198</horizontal_fov>
							<image>
								<width>640</width>
								<height>480</height>
								<format>B8G8R8</format>
							</image>
							<clip>
								<near>0.05</near>
								<far>3</far>
							</clip>
						</camera>
					</sensor>
				</link>
			</model>
			<pose>0 0 1 0 0 0</pose>
			<box>
				<size>2 1 2</size>
			</box>
			<!-- <cylinder> <radius>2</radius> <length>3</length> </cylinder> -->
			<model_count>3</model_count>
			<distribution>
				<type>random</type> <!-- random / uniform / grid -->
				<!-- <rows>5</rows> <cols>5</cols> <step>1 1 1</step> -->
			</distribution>
		</population>

		<physics type="ode">
			<gravity>0 0 -9.81</gravity>
			<max_step_size>0.01</max_step_size>
			<real_time_factor>0.1</real_time_factor>
			<real_time_update_rate>1000</real_time_update_rate>
			<ode>
				<solver>
					<type>quick</type>
					<iters>50</iters>
					<sor>1.4</sor>
				</solver>
				<constraints>
					<cfm>0</cfm>
					<erp>1</erp>
					<contact_max_correcting_vel>0</contact_max_correcting_vel>
					<contact_surface_layer>0</contact_surface_layer>
				</constraints>
			</ode>
		</physics>

		<plugin name="active_perception" filename="libactive_perception.so">
			<numberOfSamplingSensors>3</numberOfSamplingSensors>
			<numberOfIntendedSensors>1</numberOfIntendedSensors>
			<numberOfSimulationStepsBetweenSensorAnalysis>1000</numberOfSimulationStepsBetweenSensorAnalysis>
			<sensorOrientationRandomRoll>true</sensorOrientationRandomRoll>
			<sensorDataSegmentationColorRGB>0 0 255</sensorDataSegmentationColorRGB>
			<samplingSensorsNamePrefix>active_perception</samplingSensorsNamePrefix>
			<topicSamplingSensorsPointcloudPrefix>sampling_point_cloud_</topicSamplingSensorsPointcloudPrefix>
			<robotNamespace>active_perception</robotNamespace>
			<topicObservationPoint>set_observation_point</topicObservationPoint>
			<topicModelNames>set_model_names</topicModelNames>
		</plugin>
	</world>
</sdf>
